resources:
  pipelines:
  - pipeline: azure-pipelines # Name of the pipeline resource.
    source: g-lalevee.Apigee-Proxy # The name of the pipeline referenced by this pipeline resource.
    # project: xxxxx # Required only if the source pipeline is in another project
    trigger: true # Run apihub-pipeline when any run of azure-pipeline completes

trigger:
  branches:
    include:
    - main
    - releases/*
  paths:
    include:
    - apiHub

variables:
  APIGEE_ORG: "bap-emea-apigee-5"




steps:

# Retrieve Azure-Pipeline execution status from publisghed artifact
- task: DownloadPipelineArtifact@2
  continueOnError: true
  inputs:
    buildType: 'specific'
    project: '97b846c9-c6db-4b04-90ec-3e4968d10843'
    definition: '6'
    specificBuildWithTriggering: true
    buildVersionToDownload: 'latest'
    allowPartiallySucceededBuilds: true
    allowFailedBuilds: true
    artifactName: 'Apigee_Proxy_Pipeline'
    targetPath: '$(Pipeline.Workspace)/s/Apigee_Proxy_log'

# If status failed (in same commit), then exit with error
- bash: |
    echo "Current Build version: " ${BUILD_SOURCEVERSION:0:7}
    Apigee_Proxy_status=$(cat Apigee_Proxy_log/pipeline_status)
    echo "Azure pipeline last failed Build version: " $(echo $Apigee_Proxy_status | cut -f1 -d"-")
    if [ $Apigee_Proxy_status = "${BUILD_SOURCEVERSION:0:7}-failed" ]
    then
      echo "Hub Pipeline cannot be executed because Apigee Proxy pipeline failed";
      exit 1
    fi
  enabled: "true"
  displayName: echo 


# Azure pipeline doest allow to change job working directory :(
# so... copy all apiHub files to be able to keep GitHub repository organization 
- bash: |
    echo "Copy ./apiHub files to $(pwd)"
    cp -R ./apiHub/* . 
  enabled: "true"
  displayName: Copy apiHub directory files 


# Generate GCP Service Account file from Azure Pipeline variable GCP_SERVICE_ACCOUNT
# if deploy to Apigee X/hybrid
- bash: |
    echo '$(GCP_SERVICE_ACCOUNT)' > sa.json
  enabled: "true"
  displayName: Generate SA Key file 
  env:  
    GCP_SERVICE_ACCOUNT: $(GCP_SERVICE_ACCOUNT)

# Maven Deploy Apigee Configuration (from EdgeeConfig/edge.json): Apigee edge
- task: Maven@3
  displayName: mvnApigeeConfigurationApigee
  enabled: "true"
  inputs:
    mavenPomFile: 'apiHub/pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    goals: "install -Pdev -DprojectId=$(APIGEE_ORG) -Doptions=sync -Dfile=./sa.json --no-transfer-progress"
