
trigger:
  branches:
    include:
    - main
    - releases/*
  paths:
    include:
    - apiProxy

pool:
  vmImage: 'ubuntu-latest'

variables:
  APIGEE_ENV: "default-dev"
  APIGEE_ORG: "bap-emea-apigee-5"
  TEST_HOST: 34.117.38.184.nip.io

  AUTHOR_EMAIL: $(APIGEE_USER)
  COMMIT_ID: $(Build.SourceVersion)
  COMMIT_BRANCH: $(Build.SourceBranch)

  # GCP_SERVICE_ACCOUNT, APIGEE_USER & APIGEE_PASSWORD are stored in Azure Pipeline variable settings
  


steps:

# Azure pipeline doest allow to change job working directory :(
# so... copy all apiProxy files to be able to keep GitHub repository organization 
- bash: |
    exit 1
    echo "Copy ./apiHub files to $(pwd)"
    cp -R ./apiProxy/* . 
  enabled: "true"
  displayName: Copy apiProxy directory files 


# install node.js tools and dependencies
- task: NodeTool@0
  inputs:
    versionSpec: '12.x'
  enabled: "true"
    
- task: Npm@1
  inputs:
    command: 'install'
    workingDir: '.'
  displayName: npmInstalls
  enabled: "true"

# run Apigeelint, API proxy linter
# generate result output in Junit because Azure task PublishTestResults doesn't (yet) support html
- bash: |
    echo "run Apigeelint" 
    mkdir code_test_output
    ./node_modules/apigeelint/cli.js -s apiproxy/ -e PO013 -f html.js  > code_test_output/apigeelint-output.html
    cat code_test_output/apigeelint-output.html
  enabled: "true"
  displayName: runApigeeLint


# run ESlint, javascript linter
- bash: |
    echo "run Eslint"
    ./node_modules/eslint/bin/eslint.js -c ./.eslintrc-jsc.yml --format html ./apiproxy/resources/jsc > code_test_output/eslint-out.html
    cat code_test_output/eslint-out.html
  enabled: "true"
  displayName: runESlint


# Publish static code analysis folder results
- task: PublishBuildArtifacts@1
  displayName: publishStaticCodeTestsResults
  enabled: "true"
  inputs:
    pathToPublish: code_test_output
    artifactName: static-code-analysis

# run Mocha, JavaScript unit test 
- bash: |
    echo "run Mocha"
    mkdir unit_test_output
    ./node_modules/nyc/bin/nyc.js --reporter=html --reporter=html ./node_modules/mocha/bin/_mocha ./test/unit
    cp ./coverage/* ./unit_test_output
  enabled: "true"
  displayName: runMocha


# Publish unit test folder results
- task: PublishBuildArtifacts@1
  displayName: publishUnitTestsResults
  enabled: "true"
  inputs:
    pathToPublish: unit_test_output
    artifactName: unit-tests


# Generate GCP Service Account file from Azure Pipeline variable GCP_SERVICE_ACCOUNT
# if deploy to Apigee X/hybrid
- bash: |
    echo '$(GCP_SERVICE_ACCOUNT)' > sa.json
  enabled: "true"
  displayName: Generate SA Key file 
  env:  
    GCP_SERVICE_ACCOUNT: $(GCP_SERVICE_ACCOUNT)


# Maven Config Env.
- task: Maven@3
  displayName: mvnProcessResources
  enabled: "true"
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    goals: "process-resources -q -Pgoogleapi -Dcommit=$(GIT_COMMIT) -Dbranch=$(GIT_BRANCH) -Dauthor=$(AUTHOR_EMAIL) -e"


# Maven Package proxy bundle
- task: Maven@3
  displayName: mvnApigeeConfigure
  enabled: "true"
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    goals: "apigee-enterprise:configure -q -Pgoogleapi -Dorg=$(APIGEE_ORG) -Denv=$(APIGEE_ENV)" 


# Maven Deploy proxy bundle: Apigee X/hybrid
- task: Maven@3
  displayName: mvnApigeeDeployGoogle
  enabled: "true"
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    goals: "apigee-enterprise:deploy -q -Pgoogleapi  -Dapigee.org=$(APIGEE_ORG) -Denv=$(APIGEE_ENV) -Dsa=sa.json" 
    

# run Apickli, API test integration
- bash: |
    echo "run Apickli"
    mkdir integration_output
    
    # update apickli config file (init.js) with API hostname and base path
    export API_BASEPATH="/airports-cicd/v1"
    sed -i "s@api_basepath@$API_BASEPATH@g" ./test/integration/features/support/init.js
    sed -i "s@organization_hostname@$TEST_HOST@g" ./test/integration/features/support/init.js
    
    # NODE_TLS_REJECT_UNAUTHORIZED required to support self signed certificate
    # export NODE_TLS_REJECT_UNAUTHORIZED=0

    node ./node_modules/.bin/cucumber-js  ./test/integration --format json:report.json
    node ./test/integration/index.js

    cp ./cucumber_report.html integration_output/apickli_report.html 
  displayName: runApickli
  enabled: "true"
  

# Publish integration test folder result
- task: PublishBuildArtifacts@1
  displayName: publishInteegrationTestsResults
  enabled: "true"
  inputs:
    pathToPublish: integration_output
    artifactName: integration-tests


# Publish Pipeline Status in artifact (to be used by next pipeline)
- bash: |
    mkdir Apigee_Proxy_log
    echo ${BUILD_SOURCEVERSION:0:7}-"failed" > Apigee_Proxy_log/pipeline_status
  condition: failed() 
  enabled: "true"
  displayName: Publish failed into artifact 

- task: PublishPipelineArtifact@1
  condition: failed() 
  inputs:
    targetPath: '$(Pipeline.Workspace)/s/Apigee_Proxy_log'
    artifact: 'Apigee_Proxy_Pipeline'
    publishLocation: 'pipeline'
