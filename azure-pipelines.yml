# Maven

# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java



trigger:
- main
- releases/*

pool:
  vmImage: 'ubuntu-latest'

variables:


  API_VERSION: "googleapi"
  DEFAULT_APIGEE_ENV: "default-dev"
  DEFAULT_APIGEE_ORG: "bap-emea-apigee-5"

  TEST_HOST: 34.117.38.184.nip.io
  
  AUTHOR_EMAIL: $(APIGEE_USER)
  COMMIT_ID: $(Build.SourceVersion)
  COMMIT_BRANCH: $(Build.SourceBranch)

  # GCP_SERVICE_ACCOUNT, APIGEE_USER & APIGEE_PASSWORD are stored in Azure Pipeline variable settings
  
jobs:

- job: Apigee_Commit_Check
  timeoutInMinutes: 10
  steps:
  - bash: |
      echo "Job Apigee-Commit-Check"   
      echo "----"
      pwd
      echo "----"
      ls
      echo "----"

      # Diff HEAD with the previous commit
      diff=$(git diff --name-only HEAD^..HEAD )
      # diff=$(git diff  --name-only --relative --diff-filter=AM HEAD^ HEAD)
      echo "Files updated in the last commit:" $diff

      # Check if **SPEC** file(s) changed
      specConfigDiff=$(echo $diff | tr " " "\n" | grep -E "apiHub/api-config.yaml|apiHub/specs/.+\.(json|yaml)")

      if [ -z "$specConfigDiff" ]
      then
        echo "No Api change"
        echo "##vso[task.setvariable variable=updateHub;isoutput=true]false"
      else
        echo "Api change -> [" $specConfigDiff "]"
        #echo "updateHub=true" >> $GITHUB_ENV
        echo "##vso[task.setvariable variable=updateHub;isoutput=true]true"
      fi
      
      # Check if ** PROXY ** file(s) changed
      apiProxyDiff=$(echo $diff | tr " " "\n" | grep -E "apiProxy/apiproxy/.*")
      if [ -z "$apiProxyDiff" ]
      then
        echo "No proxy change"
        echo "##vso[task.setvariable variable=updateProxy;isoutput=true]false"
      else
        echo "Proxy change -> [" $apiProxyDiff "]"

        #echo "updateProxy=true" >> $GITHUB_ENV
        echo "##vso[task.setvariable variable=updateProxy;isoutput=true]true"
      fi   
    enabled: "true"
    displayName: Apigee-Commit-Check-1


- job: Apigee_Proxy_Deploy
  timeoutInMinutes: 10
  dependsOn: Apigee_Commit_Check
  variables:
    updateProxy: $[ dependencies.Apigee_Commit_Check.outputs['passOutput.updateProxy'] ]  
  condition:  and(succeeded(), eq(dependencies.Apigee_Commit_Check.outputs['passOutput.updateProxy'], 'true'))
  steps:
  - bash: |
        echo "Job Apigee-Proxy-Deploy -> " $(updateProxy)       
    enabled: "true"
    env:  
      DEFAULT_APIGEE_ORG: $(DEFAULT_APIGEE_ORG)
      DEFAULT_APIGEE_ENV: $(DEFAULT_APIGEE_ENV)
      COMMIT_BRANCH: $(COMMIT_BRANCH)


- job:  Apigee_Hub_Publish
  timeoutInMinutes: 10
  dependsOn: Apigee_Proxy_Deploy
  variables:
    updateHub: $[ dependencies.Apigee_Commit_Check.outputs['passOutput.updateHub'] ]  
  condition:  and(succeeded(), eq(dependencies.Apigee_Commit_Check.outputs['passOutput.updateHub'], 'true'))
  steps:
  - bash: |
      echo "Job Apigee-Hub-Publish -> " $(updateHub)   
    enabled: "true"
    displayName:  Apigee-Hub-Publish-1

 
